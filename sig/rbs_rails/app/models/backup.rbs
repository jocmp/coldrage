class Backup < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Backup, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor snapshot_id(): String?
  def snapshot_id_changed?: () -> bool
  def snapshot_id_change: () -> [ String?, String? ]
  def snapshot_id_will_change!: () -> void
  def snapshot_id_was: () -> String?
  def snapshot_id_previously_changed?: () -> bool
  def snapshot_id_previous_change: () -> Array[String?]?
  def snapshot_id_previously_was: () -> String?
  def snapshot_id_before_last_save: () -> String?
  def snapshot_id_change_to_be_saved: () -> Array[String?]?
  def snapshot_id_in_database: () -> String?
  def saved_change_to_snapshot_id: () -> Array[String?]?
  def saved_change_to_snapshot_id?: () -> bool
  def will_save_change_to_snapshot_id?: () -> bool
  def restore_snapshot_id!: () -> void
  def clear_snapshot_id_change: () -> void

  attr_accessor watcher_id(): Integer
  def watcher_id_changed?: () -> bool
  def watcher_id_change: () -> [ Integer?, Integer? ]
  def watcher_id_will_change!: () -> void
  def watcher_id_was: () -> Integer?
  def watcher_id_previously_changed?: () -> bool
  def watcher_id_previous_change: () -> Array[Integer?]?
  def watcher_id_previously_was: () -> Integer?
  def watcher_id_before_last_save: () -> Integer?
  def watcher_id_change_to_be_saved: () -> Array[Integer?]?
  def watcher_id_in_database: () -> Integer?
  def saved_change_to_watcher_id: () -> Array[Integer?]?
  def saved_change_to_watcher_id?: () -> bool
  def will_save_change_to_watcher_id?: () -> bool
  def restore_watcher_id!: () -> void
  def clear_watcher_id_change: () -> void

  attr_accessor tracks(): untyped?
  def tracks_changed?: () -> bool
  def tracks_change: () -> [ untyped?, untyped? ]
  def tracks_will_change!: () -> void
  def tracks_was: () -> untyped?
  def tracks_previously_changed?: () -> bool
  def tracks_previous_change: () -> Array[untyped?]?
  def tracks_previously_was: () -> untyped?
  def tracks_before_last_save: () -> untyped?
  def tracks_change_to_be_saved: () -> Array[untyped?]?
  def tracks_in_database: () -> untyped?
  def saved_change_to_tracks: () -> Array[untyped?]?
  def saved_change_to_tracks?: () -> bool
  def will_save_change_to_tracks?: () -> bool
  def restore_tracks!: () -> void
  def clear_tracks_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  def watcher: () -> Watcher
  def watcher=: (Watcher?) -> Watcher?
  def build_watcher: (untyped) -> Watcher
  def create_watcher: (untyped) -> Watcher
  def create_watcher!: (untyped) -> Watcher
  def reload_watcher: () -> Watcher?

  class ActiveRecord_Relation < ActiveRecord::Relation
    include _ActiveRecord_Relation[Backup, Integer]
    include Enumerable[Backup]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  end
end
